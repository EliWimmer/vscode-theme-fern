/* Color variables */
:root {
  --primary-color: #3b82f6;
  --error-color: rgb(239, 68, 68);
}

/* Class with nested selectors */
.container {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 1rem;
}

.container > * {
  transition: transform 200ms ease-in-out;
}

/* Pseudo-classes and custom properties */
.btn:hover {
  background-color: var(--primary-color);
  transform: translateY(-2px);
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
}

/* Media query with flexbox */
@media (max-width: 768px) {
  .flex-wrapper {
    display: flex;
    flex-direction: column;
    align-items: center;
  }
}

/* Animation keyframes */
@keyframes slide-in {
  from {
    opacity: 0;
    transform: translateX(-100%);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

/* This will cause an error - invalid property */
.error-example {
  display: invalid-value;
}

/* This will cause a warning - deprecated property */
.warning-example {
  float: left;
}

/* Complex selectors */
.parent > .child:not(:last-child)::after {
  content: "";
  position: absolute;
  background: linear-gradient(45deg, var(--primary-color), var(--error-color));
}
